{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport Start from \"./components/Start\";\nimport Chat from \"./components/Chat\";\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    _classCallCheck(this, App);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(NavigationContainer, {\n        children: _jsxs(Stack.Navigator, {\n          initialRouteName: \"Start\",\n          children: [_jsx(Stack.Screen, {\n            name: \"Start\",\n            component: Start\n          }), _jsx(Stack.Screen, {\n            name: \"Chat\",\n            component: Chat\n          })]\n        })\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"names":["StatusBar","React","Start","Chat","NavigationContainer","createStackNavigator","Stack","App","props","Component"],"sources":["/Users/prashantpriya/Desktop/CF Projects/chatApp/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\n\nimport Start from './components/Start';\nimport Chat from './components/Chat';\n\n// import react native gesture handler\nimport 'react-native-gesture-handler';\n\n// import react Navigation\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\n\n// Create the navigator\nconst Stack = createStackNavigator();\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n  render() {\n    return (\n      <NavigationContainer>\n        <Stack.Navigator\n          initialRouteName=\"Start\"\n        >\n          <Stack.Screen\n            name=\"Start\"\n            component={Start}\n          />\n          <Stack.Screen\n            name=\"Chat\"\n            component={Chat}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    );\n  }\n}\n\n"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP;AACA,OAAOC,IAAP;AAGA,OAAO,8BAAP;AAGA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;;;AAIA,IAAMC,KAAK,GAAGD,oBAAoB,EAAlC;;IAEqBE,G;;;;;EACnB,aAAYC,KAAZ,EAAmB;IAAA;;IAAA,yBACXA,KADW;EAElB;;;;WACD,kBAAS;MACP,OACE,KAAC,mBAAD;QAAA,UACE,MAAC,KAAD,CAAO,SAAP;UACE,gBAAgB,EAAC,OADnB;UAAA,WAGE,KAAC,KAAD,CAAO,MAAP;YACE,IAAI,EAAC,OADP;YAEE,SAAS,EAAEN;UAFb,EAHF,EAOE,KAAC,KAAD,CAAO,MAAP;YACE,IAAI,EAAC,MADP;YAEE,SAAS,EAAEC;UAFb,EAPF;QAAA;MADF,EADF;IAgBD;;;;EArB8BF,KAAK,CAACQ,S;;SAAlBF,G"},"metadata":{},"sourceType":"module"}