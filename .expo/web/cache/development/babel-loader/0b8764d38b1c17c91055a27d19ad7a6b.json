{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { GiftedChat, Bubble, InputToolbar } from 'react-native-gifted-chat';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport NetInfo from '@react-native-community/netinfo';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar firebase = require('firebase');\n\nrequire('firebase/firestore');\n\nvar Chat = function (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _super.call(this, props);\n\n    _this.onCollectionUpdate = function (querySnapshot) {\n      var messages = [];\n      querySnapshot.forEach(function (doc) {\n        var _data$createdAt;\n\n        var data = doc.data();\n        messages.push({\n          _id: data._id,\n          text: data.text,\n          createdAt: (_data$createdAt = data.createdAt) == null ? void 0 : _data$createdAt.toDate(),\n          user: {\n            _id: data.user._id,\n            name: data.user.name,\n            avatar: data.user.avatar || ''\n          }\n        });\n      });\n\n      _this.setState({\n        messages: messages\n      });\n    };\n\n    _this.state = {\n      messages: [],\n      uid: 0,\n      user: {\n        _id: '',\n        name: '',\n        avatar: ''\n      },\n      isConnected: false\n    };\n    var firebaseConfig = {\n      apiKey: \"AIzaSyBQF4hVb36u56Q--Usb76HliDu3zD3YIxU\",\n      authDomain: \"chatapp-b91f5.firebaseapp.com\",\n      projectId: \"chatapp-b91f5\",\n      storageBucket: \"chatapp-b91f5.appspot.com\",\n      messagingSenderId: \"132737882655\",\n      appId: \"1:132737882655:web:9a26378385be748f84132a\",\n      measurementId: \"G-D61GNPCPCK\"\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    }\n\n    _this.referenceChatMessages = firebase.firestore().collection('messages');\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"saveMessages\",\n    value: function saveMessages() {\n      return _regeneratorRuntime.async(function saveMessages$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('messages', JSON.stringify(this.state.messages)));\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0.message);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 5]], Promise);\n    }\n  }, {\n    key: \"getMessages\",\n    value: function getMessages() {\n      var messages;\n      return _regeneratorRuntime.async(function getMessages$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              messages = '';\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('messages'));\n\n            case 4:\n              _context2.t0 = _context2.sent;\n\n              if (_context2.t0) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.t0 = [];\n\n            case 7:\n              messages = _context2.t0;\n              this.setState({\n                messages: JSON.parse(messages)\n              });\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t1 = _context2[\"catch\"](1);\n              console.log(_context2.t1.message);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[1, 11]], Promise);\n    }\n  }, {\n    key: \"deleteMessages\",\n    value: function deleteMessages() {\n      return _regeneratorRuntime.async(function deleteMessages$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem('messages'));\n\n            case 3:\n              _context3.next = 8;\n              break;\n\n            case 5:\n              _context3.prev = 5;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0.message);\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 5]], Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var name = this.props.route.params.name;\n      this.props.navigation.setOptions({\n        title: name\n      });\n      NetInfo.fetch().then(function (connection) {\n        if (connection.isConnected) {\n          _this2.setState({\n            isConnected: true\n          });\n\n          _this2.referenceChatMessages = firebase.firestore().collection('messages');\n          _this2.authUnsubscribe = firebase.auth().onAuthStateChanged(function _callee(user) {\n            return _regeneratorRuntime.async(function _callee$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    if (!user) {\n                      firebase.auth().signInAnonymously();\n                    }\n\n                    _this2.setState({\n                      uid: user.uid,\n                      messages: [],\n                      user: {\n                        _id: user.uid,\n                        name: name\n                      }\n                    });\n\n                    _this2.unsubscribe = _this2.referenceChatMessages.orderBy('createdAt', 'desc').onSnapshot(_this2.onCollectionUpdate);\n\n                  case 3:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          });\n        } else {\n          _this2.setState({\n            isConnected: false\n          });\n\n          _this2.getMessages();\n        }\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.isConnected) {\n        this.unsubscribe();\n        this.authUnsubscribe();\n      }\n    }\n  }, {\n    key: \"onSend\",\n    value: function onSend() {\n      var _this3 = this;\n\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, messages)\n        };\n      }, function () {\n        var newMessage = _this3.state.messages[0];\n\n        _this3.referenceChatMessages.add(newMessage);\n\n        _this3.saveMessages();\n\n        if (_this3.state.isConnected === true) {\n          _this3.addMessages(_this3.state.messages[0]);\n        }\n      });\n    }\n  }, {\n    key: \"renderBubble\",\n    value: function renderBubble(props) {\n      return _jsx(Bubble, _objectSpread(_objectSpread({}, props), {}, {\n        wrapperStyle: {\n          left: {\n            backgroundColor: '#fafafa'\n          },\n          right: {\n            backgroundColor: '#2d7ecf'\n          }\n        }\n      }));\n    }\n  }, {\n    key: \"renderInputToolbar\",\n    value: function renderInputToolbar(props) {\n      if (this.state.isConnected == false) {} else {\n        return _jsx(InputToolbar, _objectSpread({}, props));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var name = this.props.route.params.name;\n      var color = this.props.route.params.color;\n\n      if (color === '') {\n        color = '#8A95A5';\n      }\n\n      return _jsxs(View, {\n        style: [{\n          backgroundColor: color\n        }, {\n          flex: 1\n        }],\n        children: [_jsx(GiftedChat, {\n          renderBubble: this.renderBubble.bind(this),\n          renderInputToolbar: this.renderInputToolbar.bind(this),\n          messages: this.state.messages,\n          onSend: function onSend(messages) {\n            return _this4.onSend(messages);\n          },\n          user: {\n            _id: this.state.user._id,\n            name: this.state.user.name\n          }\n        }), Platform.OS === 'android' ? _jsx(KeyboardAvoidingView, {\n          behavior: \"height\"\n        }) : null]\n      });\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport { Chat as default };","map":{"version":3,"names":["React","GiftedChat","Bubble","InputToolbar","AsyncStorage","NetInfo","firebase","require","Chat","props","onCollectionUpdate","querySnapshot","messages","forEach","doc","data","push","_id","text","createdAt","toDate","user","name","avatar","setState","state","uid","isConnected","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","referenceChatMessages","firestore","collection","setItem","JSON","stringify","console","log","message","getItem","parse","removeItem","route","params","navigation","setOptions","title","fetch","then","connection","authUnsubscribe","auth","onAuthStateChanged","signInAnonymously","unsubscribe","orderBy","onSnapshot","getMessages","previousState","append","newMessage","add","saveMessages","addMessages","left","backgroundColor","right","color","flex","renderBubble","bind","renderInputToolbar","onSend","Platform","OS","Component"],"sources":["/Users/prashantpriya/Desktop/CF Projects/chatApp/components/Chat.js"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, View, Text, TextInput, Button, FlatList } from 'react-native';\nimport { GiftedChat, Bubble, InputToolbar } from 'react-native-gifted-chat';\nimport { Platform, KeyboardAvoidingView } from 'react-native';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport NetInfo from '@react-native-community/netinfo';\n\n\n//import firebase\nconst firebase = require('firebase');\nrequire('firebase/firestore');\n\nexport default class Chat extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            messages: [],\n            uid: 0,\n            user: {\n                _id: '',\n                name: '',\n                avatar: '',\n            },\n            isConnected: false,\n        };\n        //config keys\n        const firebaseConfig = {\n            apiKey: \"AIzaSyBQF4hVb36u56Q--Usb76HliDu3zD3YIxU\",\n            authDomain: \"chatapp-b91f5.firebaseapp.com\",\n            projectId: \"chatapp-b91f5\",\n            storageBucket: \"chatapp-b91f5.appspot.com\",\n            messagingSenderId: \"132737882655\",\n            appId: \"1:132737882655:web:9a26378385be748f84132a\",\n            measurementId: \"G-D61GNPCPCK\"\n        }\n\n        if (!firebase.apps.length) {\n            firebase.initializeApp(firebaseConfig);\n        }\n        this.referenceChatMessages = firebase.firestore().collection('messages');\n    }\n\n    onCollectionUpdate = (querySnapshot) => {\n        const messages = [];\n        // go through each document\n        querySnapshot.forEach((doc) => {\n            // get the QueryDocumentSnapshot's data\n            let data = doc.data();\n            messages.push({\n                _id: data._id,\n                text: data.text,\n                createdAt: data.createdAt?.toDate(),\n                user: {\n                    _id: data.user._id,\n                    name: data.user.name,\n                    avatar: data.user.avatar || '',\n                },\n            });\n        });\n        this.setState({\n            messages,\n        });\n    }\n    // firebase storage\n    async saveMessages() {\n        try {\n            await AsyncStorage.setItem('messages', JSON.stringify(this.state.messages));\n        } catch (error) {\n            console.log(error.message);\n        }\n    }\n\n    // temporarly storage of messages (storage)\n    async getMessages() {\n        let messages = '';\n        try {\n            messages = await AsyncStorage.getItem('messages') || [];\n            this.setState({\n                messages: JSON.parse(messages)\n            });\n        } catch (error) {\n            console.log(error.message);\n        }\n    }\n\n    async deleteMessages() {\n        try {\n            await AsyncStorage.removeItem('messages');\n        } catch (error) {\n            console.log(error.message);\n        }\n    }\n\n    componentDidMount() {\n        // Set name as title chat\n        let { name } = this.props.route.params;\n        this.props.navigation.setOptions({ title: name });\n\n        // Check if user is offline or online\n        NetInfo.fetch().then((connection) => {\n            if (connection.isConnected) {\n                this.setState({\n                    isConnected: true,\n                });\n\n                // Reference to load messages from Firebase\n                this.referenceChatMessages = firebase\n                    .firestore()\n                    .collection('messages');\n\n                // Authenticate user anonymously\n                this.authUnsubscribe = firebase\n                    .auth()\n                    .onAuthStateChanged(async (user) => {\n                        if (!user) {\n                            firebase.auth().signInAnonymously();\n                        }\n                        this.setState({\n                            uid: user.uid,\n                            messages: [],\n                            user: {\n                                _id: user.uid,\n                                name: name,\n                            },\n                        });\n                        this.unsubscribe = this.referenceChatMessages\n                            .orderBy('createdAt', 'desc')\n                            .onSnapshot(this.onCollectionUpdate);\n                    });\n            } else {\n                this.setState({\n                    isConnected: false,\n                });\n                this.getMessages();\n            }\n        });\n    }\n    // stop listening to auth and collection changes\n    componentWillUnmount() {\n        if (this.isConnected) {\n            this.unsubscribe();\n            this.authUnsubscribe();\n        }\n    }\n\n    // onSend(messages = []) {\n    //     this.setState(\n    //         (previousState) => ({\n    //             messages: GiftedChat.append(previousState.messages, messages),\n    //         }),\n    //         () => {\n    //             // Save messages locally with Async Storage\n    //             this.saveMessages();\n    //             // Call addMessage with last message in message state\n    //             if (this.state.isConnected === true) {\n    //                 this.addMessages(this.state.messages[0]);\n    //             }\n    //         }\n    //     );\n    // }\n\n    //     \n    onSend(messages = []) {\n        this.setState(previousState => ({\n            messages: GiftedChat.append(previousState.messages, messages),\n        }), () => {\n            const newMessage = this.state.messages[0]\n            this.referenceChatMessages.add(newMessage)\n            this.saveMessages();\n            if (this.state.isConnected === true) {\n                this.addMessages(this.state.messages[0]);\n              }\n        });\n    }\n\n\n\n    renderBubble(props) {\n        return (\n            <Bubble\n                {...props}\n                wrapperStyle={{\n                    left: {\n                        backgroundColor: '#fafafa',\n                    },\n                    right: {\n                        backgroundColor: '#2d7ecf',\n                    },\n                }}\n            />\n        )\n    }\n    // When user is offline disable sending new messages \n    renderInputToolbar(props) {\n        if (this.state.isConnected == false) {\n        } else {\n            return (\n                <InputToolbar\n                    {...props}\n                />\n            );\n        }\n    }\n\n    render() {\n        let name = this.props.route.params.name;\n        let color = this.props.route.params.color;\n        if (color === '') {\n            color = '#8A95A5';\n        }\n        return (\n            <View style={[{ backgroundColor: color }, { flex: 1 }]}>\n                <GiftedChat\n                    renderBubble={this.renderBubble.bind(this)}\n                    renderInputToolbar={this.renderInputToolbar.bind(this)}\n                    messages={this.state.messages}\n                    onSend={messages => this.onSend(messages)}\n                    user={{ _id: this.state.user._id, name: this.state.user.name }}\n\n                />\n\n                {\n                    Platform.OS === 'android' ? <KeyboardAvoidingView behavior=\"height\" /> : null\n                }\n            </View>\n        )\n\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}